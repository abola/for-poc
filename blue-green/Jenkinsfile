  /*
    This is an example pipeline that implement blue-green deploy strategy with kubernetes+istio
    The pipeline is made up of ? main steps
    1. 
    2.
    3.
    4.
    5.
 */
def name = "app"
def namespace = "blue-green"
def imageName = "localhost:32000/app"
def imageTag = "1.4.1" // image's tag
def podReplicaCount = "3"
def serviceType = "ClusterIP" // None, NodePort, ClusterIP, LoadBalancer
def port = "3000"
def nodePort = "" // if serviceType is NodePort
def targetPort = "3000"
def gatewayName = "systex-gw"


podTemplate(cloud: 'kubernetes', containers: [
    containerTemplate(
        name: 'kubectl',
        image: 'localhost:32000/kubectl:1.1',
        ttyEnabled: true,
        privileged: false,
        alwaysPullImage: false,
        workingDir: '/home/jenkins/agent',
        resourceRequestCpu: '50m',
        resourceLimitCpu: '100m',
        resourceRequestMemory: '100Mi',
        resourceLimitMemory: '200Mi',
        command: 'cat'
    )
],
volumes: [
    configMapVolume(mountPath: '/home/jenkins/agent/.kube', configMapName: 'jenkins-cluster-master')
]
) {
  node(POD_LABEL)  {
    stage('Run maven') {
      container('kubectl') {
        checkout scm

        
        stage('Deploy Green'){
          sh """
            BLUE_VERSION=$(kubectl get DestinationRule app -o jsonpath='{.spec.subsets[?(@.name=="blue")].labels.version}')
            helm template \
              --set project.name=${name} \
              --set project.namespace=${namespace} \
              --set project.pod.image.name=${imageName} \
              --set project.pod.image.tag=${imageTag} \
              --set project.pod.replica=${podReplicaCount} \
              --set project.service.type=${serviceType} \
              --set project.service.port=${port} \
              --set project.service.targetPort=${targetPort} \
              --set project.service.nodePort=${nodePort} \
              --set project.gateway.name=${gatewayName} \
              --set project.version.blue=${BLUE_VERSION} \
              --set project.version.green=${imageTag} \
              blue-green/deploy-green/
          """
        }
        stage('Green Ready'){
          sh "sleep 3"
        }
        stage('Switch B2G'){
          sh "sleep 3"
        }
        stage('Check Healthy'){
          sh "sleep 3"
        }
        stage('Close Blue'){
          sh "sleep 3"
        }
      }
      
    }
  }
}
