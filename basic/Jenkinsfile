/*
   基礎服務上線樣版
 */
def name = "app"                        // deployment name
def namespace = "my-team-1001"          // namespace
def imageName = "localhost:32000/app"   // Docker image repo
def imageTag = "1.4.2"                  // image tag (version)
def podReplicaCount = "1"               // how many replicas will be create.
def serviceType = "ClusterIP"           // None, NodePort, ClusterIP, LoadBalancer
def port = "3000"
def nodePort = ""                       // if serviceType is NodePort
def targetPort = "3000"

podTemplate(cloud: 'kubernetes', containers: [
    containerTemplate(
        name: 'kubectl',
        image: 'localhost:32000/kubectl:1.1',
        ttyEnabled: true,
        privileged: false,
        alwaysPullImage: false,
        workingDir: '/home/jenkins/agent',
        resourceRequestCpu: '50m',
        resourceLimitCpu: '100m',
        resourceRequestMemory: '100Mi',
        resourceLimitMemory: '200Mi',
        command: 'cat'
    )
],
volumes: [
    configMapVolume(mountPath: '/home/jenkins/agent/.kube', configMapName: 'jenkins-cluster-master')
]
) {
  node(POD_LABEL)  {
    stage('Run maven') {
      container('kubectl') {
        checkout scm
        sh """
          helm template \
            --set project.name=${name} \
            --set project.namespace=${namespace} \
            --set project.pod.image.name=${imageName} \
            --set project.pod.image.tag=${imageTag} \
            --set project.pod.replicas=${podReplicaCount} \
            --set project.service.type=${serviceType} \
            --set project.service.port=${port} \
            --set project.service.targetPort=${targetPort} \
            --set project.service.nodePort=${nodePort} \
            basic/chart/ \
          | kubectl apply -f - 
        """
      }
    }
  }
}
